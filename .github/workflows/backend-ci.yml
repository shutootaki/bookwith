---
name: Backend CI
permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches: [main]
    paths:
      - 'apps/api/**'
      - '.pre-commit-config.yaml'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'
      - '.pre-commit-config.yaml'
      - '.github/workflows/backend-ci.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs['backend'] }}
    steps:
      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'apps/api/**'
              - '.pre-commit-config.yaml'

  backend-ci:
    needs: changes
    if: needs.changes.outputs['backend'] == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    defaults:
      run:
        working-directory: ./apps/api

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ./apps/api/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-apps-api-${{ hashFiles('apps/api/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-root

      - name: Setup pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-\
            ${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: |
          cd ../..
          pip install pre-commit
          pre-commit install

      - name: Type check with MyPy
        run: |
          echo "::group::MyPy Type Check"
          poetry run mypy src --explicit-package-bases
          echo "::endgroup::"

      - name: Lint and format with Ruff (via pre-commit)
        run: |
          echo "::group::Ruff Linting and Formatting"
          cd ../..
          pre-commit run --all-files \
            --show-diff-on-failure
          echo "::endgroup::"

      - name: Check Poetry configuration
        run: |
          echo "::group::Poetry Check"
          poetry check
          echo "::endgroup::"

      - name: Check Poetry lock file
        run: |
          echo "::group::Poetry Lock Check"
          poetry lock --check
          echo "::endgroup::"

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backend-logs-${{ github.sha }}
          path: |
            apps/api/logs/
            ~/.cache/pre-commit/
          retention-days: 3
