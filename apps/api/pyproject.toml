[project]
name = "api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "dropbox>=12.0.2",
    "fastapi>=0.115.12",
    "langchain>=0.3.23",
    "langchain-community>=0.3.21",
    "langchain-openai>=0.3.12",
    "langchain-text-splitters>=0.3.8",
    "mypy>=1.15.0",
    "pydantic>=2.11.2",
    "python-multipart>=0.0.20",
    "uvicorn>=0.34.0",
    "unstructured-client (>=0.32.1,<0.33.0)",
    "unstructured (>=0.17.2,<0.18.0)",
    "pypandoc (>=1.15,<2.0)",
    "langchain-weaviate (>=0.0.4,<0.0.5)",
    "weaviate-client (>=4.12.0,<5.0.0)",
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "psycopg2 (>=2.9.10,<3.0.0)",
    "google-cloud-storage (>=3.1.0,<4.0.0)",
]

[tool.poetry.dependencies]
python = ">=3.13,<4.0"
fastapi = {version = ">=0.115.12", python = ">=3.13,<4.0"}
langchain = {version = ">=0.3.23", python = ">=3.13,<4.0"}
langchain-community = {version = ">=0.3.21", python = ">=3.13,<4.0"}
langchain-openai = {version = ">=0.3.12", python = ">=3.13,<4.0"}
langchain-text-splitters = {version = ">=0.3.8", python = ">=3.13,<4.0"}
pydantic = {version = ">=2.11.2", python = ">=3.13,<4.0"}
python-multipart = {version = ">=0.0.20", python = ">=3.13,<4.0"}
uvicorn = {version = ">=0.34.0", python = ">=3.13,<4.0"}
mypy = {version = ">=1.15.0", python = ">=3.13,<4.0"}
unstructured-client = {version = ">=0.32.1,<0.33.0", python = ">=3.13,<4.0"}
unstructured = {version = ">=0.17.2,<0.18.0", python = ">=3.13,<4.0"}
pypandoc = {version = ">=1.15,<2.0", python = ">=3.13,<4.0"}
langchain-weaviate = {version = ">=0.0.4,<0.0.5", python = ">=3.13,<4.0"}
weaviate-client = {version = ">=4.12.0,<5.0.0", python = ">=3.13,<4.0"}

[tool.mypy]
mypy_path = "."
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true
strict_optional = true
check_untyped_defs = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true


[tool.pydantic-mypy]
init_forbid_extra = true
# TODO: Reevaluate
#init_typed = true # When enabled, mypy will be able to check the arguments when creating Pydantic instances, but you will need to explicitly type-cast the arguments passed to Pydantic, and implicit type conversions will no longer be possible.
warn_required_dynamic_aliases = true
warn_untyped_fields = true
